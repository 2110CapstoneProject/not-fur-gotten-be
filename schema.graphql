type Application {
  createdAt: ISO8601DateTime!
  description: String!
  email: String!
  id: ID!
  name: String!
  petId: Int!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of CreateApplication
"""
input CreateApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  email: String
  name: String
  petId: Int
}

"""
Autogenerated return type of CreateApplication
"""
type CreateApplicationPayload {
  application: Application

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
}

"""
Autogenerated input type of CreatePet
"""
input CreatePetInput {
  age: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  gender: String
  image: String
  name: String
  ownerEmail: String
  ownerName: String
  ownerStory: String
  species: String
}

"""
Autogenerated return type of CreatePet
"""
type CreatePetPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  pet: Pet
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  createApplication(
    """
    Parameters for CreateApplication
    """
    input: CreateApplicationInput!
  ): CreateApplicationPayload
  createPet(
    """
    Parameters for CreatePet
    """
    input: CreatePetInput!
  ): CreatePetPayload
  updateApplication(
    """
    Parameters for UpdateApplication
    """
    input: UpdateApplicationInput!
  ): UpdateApplicationPayload
  updatePet(
    """
    Parameters for UpdatePet
    """
    input: UpdatePetInput!
  ): UpdatePetPayload
}

type Pet {
  age: Int!
  applications: [Application!]!
  createdAt: ISO8601DateTime!
  description: String!
  gender: String!
  id: ID!
  image: String
  name: String!
  ownerEmail: String!
  ownerName: String!
  ownerStory: String
  species: String!
  updatedAt: ISO8601DateTime!
}

type Query {
  getAllApplications: [Application!]!
  getAllPets: [Pet!]!
  getApplicationById(id: ID!): Application!
  getPetById(id: ID!): Pet!
}

"""
Autogenerated input type of UpdateApplication
"""
input UpdateApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  email: String
  id: ID!
  name: String
  petId: Int
}

"""
Autogenerated return type of UpdateApplication
"""
type UpdateApplicationPayload {
  application: Application

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
}

"""
Autogenerated input type of UpdatePet
"""
input UpdatePetInput {
  age: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  gender: String
  id: ID!
  image: String
  name: String
  ownerEmail: String
  ownerName: String
  ownerStory: String
  species: String
}

"""
Autogenerated return type of UpdatePet
"""
type UpdatePetPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  pet: Pet
}
